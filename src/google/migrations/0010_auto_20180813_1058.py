# Generated by Django 2.0.5 on 2018-08-13 08:58

from django.db import migrations, models
import django.db.models.deletion
import involvement.blocks.contact_card_block
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('google', '0009_auto_20180802_1259'),
    ]

    operations = [
        migrations.CreateModel(
            name='GoogleCalendarPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('title_sv', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterField(
            model_name='googleformpage',
            name='results_en',
            field=wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock(group='Basic', template='blocks/paragraph.html')), ('image', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('height', wagtail.core.blocks.IntegerBlock(default=400, min_value=1))))), ('heading', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('subtitle', wagtail.core.blocks.CharBlock(required=False))))), ('image_description', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('image_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('icons', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('icon', wagtail.core.blocks.CharBlock(help_text='Material icon font icon text, as found on: https://material.io/icons')), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.CharBlock()))))), ('hide_on_med', wagtail.core.blocks.BooleanBlock(required=False))))), ('image_icons', wagtail.core.blocks.StructBlock((('description', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('image_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('hide_on_med', wagtail.core.blocks.BooleanBlock(required=False))))), ('overlay', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.core.blocks.CharBlock(required=False)), ('description', wagtail.core.blocks.CharBlock(required=False)), ('text_color', wagtail.core.blocks.ChoiceBlock(choices=[('text-light', 'Light'), ('text-dark', 'Dark')])), ('link', wagtail.core.blocks.URLBlock(required=False)), ('button', wagtail.core.blocks.CharBlock(required=False))))), ('logos', wagtail.core.blocks.StructBlock((('logos', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('description', wagtail.core.blocks.CharBlock(required=False)))))),))), ('counters', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock()), ('counters', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('icon', wagtail.core.blocks.CharBlock(help_text='Material icon font icon text, as found on: https://material.io/icons')), ('value', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.CharBlock(required=False)))))), ('style', wagtail.core.blocks.ChoiceBlock(choices=[('light', 'Light'), ('dark', 'Dark')]))))), ('columns', wagtail.core.blocks.StructBlock((('columns', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('width', wagtail.core.blocks.IntegerBlock(help_text='Width out of 12', max_value=12, min_value=1)), ('content', wagtail.core.blocks.StreamBlock((('paragraph', wagtail.core.blocks.RichTextBlock(group='Basic', template='blocks/paragraph.html')), ('image', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('height', wagtail.core.blocks.IntegerBlock(default=400, min_value=1)))))))))))),))), ('contacts', wagtail.core.blocks.StructBlock((('contacts', wagtail.core.blocks.ListBlock(involvement.blocks.contact_card_block.ContactCardBlock())),))), ('events', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('facebook_app_id', wagtail.core.blocks.CharBlock(help_text='Facebook will be visible if id is present', required=False)), ('facebook_page_name', wagtail.core.blocks.CharBlock(help_text='Name of a public page', required=False)), ('instagram_access_token', wagtail.core.blocks.CharBlock(help_text='Instagram will be visible if token is present. Access Token can be received following: "https://elfsight.com/blog/2016/05/how-to-get-instagram-access-token/"', required=False)), ('youtube_channel_id', wagtail.core.blocks.CharBlock(help_text='Youtube will be visible if id is present', required=False)), ('google_calendar_id', wagtail.core.blocks.CharBlock(help_text='calendar will be visible if id is present', required=False)))))), blank=True),
        ),
        migrations.AlterField(
            model_name='googleformpage',
            name='results_sv',
            field=wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock(group='Basic', template='blocks/paragraph.html')), ('image', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('height', wagtail.core.blocks.IntegerBlock(default=400, min_value=1))))), ('heading', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('subtitle', wagtail.core.blocks.CharBlock(required=False))))), ('image_description', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('image_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('icons', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('icon', wagtail.core.blocks.CharBlock(help_text='Material icon font icon text, as found on: https://material.io/icons')), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.CharBlock()))))), ('hide_on_med', wagtail.core.blocks.BooleanBlock(required=False))))), ('image_icons', wagtail.core.blocks.StructBlock((('description', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('image_alignment', wagtail.core.blocks.ChoiceBlock(choices=[('left', 'Left'), ('right', 'Right')])), ('hide_on_med', wagtail.core.blocks.BooleanBlock(required=False))))), ('overlay', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.core.blocks.CharBlock(required=False)), ('description', wagtail.core.blocks.CharBlock(required=False)), ('text_color', wagtail.core.blocks.ChoiceBlock(choices=[('text-light', 'Light'), ('text-dark', 'Dark')])), ('link', wagtail.core.blocks.URLBlock(required=False)), ('button', wagtail.core.blocks.CharBlock(required=False))))), ('logos', wagtail.core.blocks.StructBlock((('logos', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('description', wagtail.core.blocks.CharBlock(required=False)))))),))), ('counters', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock()), ('counters', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('icon', wagtail.core.blocks.CharBlock(help_text='Material icon font icon text, as found on: https://material.io/icons')), ('value', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.CharBlock(required=False)))))), ('style', wagtail.core.blocks.ChoiceBlock(choices=[('light', 'Light'), ('dark', 'Dark')]))))), ('columns', wagtail.core.blocks.StructBlock((('columns', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock((('width', wagtail.core.blocks.IntegerBlock(help_text='Width out of 12', max_value=12, min_value=1)), ('content', wagtail.core.blocks.StreamBlock((('paragraph', wagtail.core.blocks.RichTextBlock(group='Basic', template='blocks/paragraph.html')), ('image', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('height', wagtail.core.blocks.IntegerBlock(default=400, min_value=1)))))))))))),))), ('contacts', wagtail.core.blocks.StructBlock((('contacts', wagtail.core.blocks.ListBlock(involvement.blocks.contact_card_block.ContactCardBlock())),))), ('events', wagtail.core.blocks.StructBlock((('title', wagtail.core.blocks.CharBlock(required=True)), ('facebook_app_id', wagtail.core.blocks.CharBlock(help_text='Facebook will be visible if id is present', required=False)), ('facebook_page_name', wagtail.core.blocks.CharBlock(help_text='Name of a public page', required=False)), ('instagram_access_token', wagtail.core.blocks.CharBlock(help_text='Instagram will be visible if token is present. Access Token can be received following: "https://elfsight.com/blog/2016/05/how-to-get-instagram-access-token/"', required=False)), ('youtube_channel_id', wagtail.core.blocks.CharBlock(help_text='Youtube will be visible if id is present', required=False)), ('google_calendar_id', wagtail.core.blocks.CharBlock(help_text='calendar will be visible if id is present', required=False)))))), blank=True),
        ),
    ]
